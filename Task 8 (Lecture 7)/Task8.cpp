#include <string>
#include <iostream>
using namespace std;

/*
1. Разработать собственный шаблонный класс для работы с хеш таблицей. Класс должен позволять:
- Добавлять пары ключ, значение
- Позволять искать значение по ключу
- Позволять изменять значение по ключу
- Позволять удалять значение по ключу

Вариант 1
В случае возникновения коллизии (два ключа указывают на одно место в таблице) значения помещаются в односвязный список

2. Написать программу определения частоты слов в тексте. Программа должна:
- Принимать имя текстового файла для анализа в качестве параметра командной строки
- Читать файл
- Выделять слова (слово - последовательность симоволов, отделяемая разделителями пробел, табуляция, точка, запятая и т.д.)
- Инкрементировать счетчик слов, для данного слова, используя в качестве контейнера хеш таблицу, разработанную в задании 1
   - слово - ключ, число упоминаний в тексте - значение
- Выести слова и число вхождений в тексте
*/

template<class K, class V>
struct HashRow
{
	K key;
	V value;

	HashRow() = delete;
	HashRow(K key, V value)
	{
		this->key = key;
		this->value = value;
	}

};

template<class V>
class HashTable
{
private:
	int size = 0;


public:

	void encrypt(V value)
	{


	}

	void insert(V value)
	{
		
	}

	void find() {}
	void update() {}
	void remove() {}

};

void file_processor()
{



}

int main()
{



}
